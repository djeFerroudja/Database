DROP TABLE SERIE CASCADE CONSTRAINTS;
DROP TABLE PERSONNAGE CASCADE CONSTRAINTS;
DROP TABLE SERIE_CREEE CASCADE CONSTRAINTS;
DROP TABLE SERIE_PRODUITE CASCADE CONSTRAINTS;
DROP TABLE SAISONS CASCADE CONSTRAINTS;
DROP TABLE ACTEUR_PARTICIPE_EPISODE CASCADE CONSTRAINTS;
DROP TABLE EPISODES CASCADE CONSTRAINTS;
DROP TABLE EPISODE_REALISEE_PAR CASCADE CONSTRAINTS;
DROP TABLE AVIS_SERIE CASCADE CONSTRAINTS;
DROP TABLE AVIS_EPISODE CASCADE CONSTRAINTS;
DROP TABLE FORUM CASCADE CONSTRAINTS;
DROP TABLE SERIE_REALISEE_PAR CASCADE CONSTRAINTS;
DROP TABLE UTILISATEURS CASCADE CONSTRAINTS;
DROP TABLE GENRE_DE_SERIE CASCADE CONSTRAINTS;

CREATE TABLE SERIE(
  TITRE_SERIE VARCHAR2(50),
  ANNEE NUMBER(4),
  ORIGINE VARCHAR2(15),
  CONSTRAINT Pk_SERIE PRIMARY KEY(TITRE_SERIE),
  CONSTRAINT Ck_SERIE_ANNEE CHECK(ANNEE>1895)
   );

CREATE TABLE GENRE_DE_SERIE(
  IDENTIFIANT NUMBER(3),
  TITRE_SERIE VARCHAR2(50),
  GENRE VARCHAR2(15),
  CONSTRAINT Pk_GENRE_DE_SERIE PRIMARY KEY(IDENTIFIANT),
  CONSTRAINT Fk_GENRE_DE_SERIE FOREIGN KEY(TITRE_SERIE) REFERENCES SERIE(TITRE_SERIE),
  CONSTRAINT Ck_GENRES_GENRE CHECK(GENRE IN('SitCom','Comedie','Horreur','Documentaire','Action','Romantique','Aventure','Science-fiction','Fantastique','Western','Histoire','Fiction','Musical','Guerre','Drame','Biographique','Catastrophe','Science','Animation','Super heros','Manga','Policier'))
);

CREATE TABLE PERSONNAGE(
  NOM_PERS VARCHAR2(12),
  PRENOM_PERS VARCHAR2(12),
  CONSTRAINT Pk_PERSONNAGE PRIMARY KEY(NOM_PERS,PRENOM_PERS)
);

CREATE TABLE SERIE_CREEE(
  NOM_PERS VARCHAR2(12),
  PRENOM_PERS VARCHAR2(12),
  TITRE_SERIE VARCHAR2(50),
  DATE_CREATION DATE,
  CONSTRAINT Pk_SERIE_CREEE PRIMARY KEY(TITRE_SERIE,NOM_PERS,PRENOM_PERS),
  CONSTRAINT Fk_CREATEURS_TITRE_SERIE FOREIGN KEY(TITRE_SERIE) REFERENCES SERIE(TITRE_SERIE),
  CONSTRAINT Fk_CREATEURS_NOM_PENOM FOREIGN KEY(NOM_PERS,PRENOM_PERS) REFERENCES PERSONNAGE(NOM_PERS,PRENOM_PERS),
  CONSTRAINT Ck_CREATEURS_DATE_CREATION CHECK(EXTRACT(YEAR FROM DATE_CREATION)>1895)
);

CREATE TABLE SERIE_PRODUITE(
  NOM_PERS VARCHAR2(12),
  PRENOM_PERS VARCHAR2(12),
  TITRE_SERIE VARCHAR2(50),
  CONSTRAINT Pk_SERIE_PRODUITE PRIMARY KEY(TITRE_SERIE,NOM_PERS,PRENOM_PERS),
  CONSTRAINT Fk_SERIE_PRODUITE_TITRE_SERIE FOREIGN KEY(TITRE_SERIE) REFERENCES SERIE(TITRE_SERIE),
  CONSTRAINT Fk_SERIE_PRODUITE_PERS FOREIGN KEY(NOM_PERS,PRENOM_PERS) REFERENCES PERSONNAGE(NOM_PERS,PRENOM_PERS)
);

CREATE TABLE SAISONS(
  SAISON NUMBER(3),
  TITRE_SERIE VARCHAR2(50),
  CONSTRAINT Pk_SAISONS PRIMARY KEY(SAISON,TITRE_SERIE),
  CONSTRAINT Fk_SAISONS_TITRE FOREIGN KEY(TITRE_SERIE) REFERENCES SERIE(TITRE_SERIE)
);

ALTER SESSION SET NLS_DATE_FORMAT = 'DD/MM/RRRR HH24:MI:SS';
CREATE TABLE EPISODES(
  TITRE_SERIE VARCHAR2(50),
  SAISON NUMBER(3),   -- NUMERO DE LA SAISON--
  TITRE_EPISODE VARCHAR2(50),
  EPISODE NUMBER(3), -- NUMERO DE LA EPISODE--
  DATE_DUREE DATE,
  RESUMER VARCHAR2(500),
  CONSTRAINT Pk_EPISODES PRIMARY KEY(TITRE_EPISODE),
  CONSTRAINT Fk_EPISODES_SAISONS FOREIGN KEY(SAISON,TITRE_SERIE) REFERENCES SAISONS(SAISON,TITRE_SERIE),
  CONSTRAINT Ck_RESUME_RESUMER CHECK(RESUMER IS NOT NULL)
);

CREATE TABLE ACTEUR_PARTICIPE_EPISODE(
  NOM_PERS VARCHAR2(12),
  PRENOM_PERS VARCHAR2(12),
  TITRE_EPISODE VARCHAR2(50),
  CONSTRAINT Pk_ACTEUR_PARTICIPE_EPISODE PRIMARY KEY(TITRE_EPISODE,NOM_PERS,PRENOM_PERS),
  CONSTRAINT Fk_ACTEUR_PARTICIPE_EPISODE FOREIGN KEY(TITRE_EPISODE) REFERENCES EPISODES(TITRE_EPISODE),
  CONSTRAINT Fk_ACTEUR_PRENOM_NOM_PERS FOREIGN KEY(NOM_PERS,PRENOM_PERS) REFERENCES PERSONNAGE(NOM_PERS,PRENOM_PERS)
);

CREATE TABLE SERIE_REALISEE_PAR(
  NOM_PERS VARCHAR2(12),
  PRENOM_PERS VARCHAR2(12),
  TITRE_SERIE VARCHAR2(50),
  CONSTRAINT Pk_SERIE_REALISEE PRIMARY KEY(NOM_PERS,PRENOM_PERS,TITRE_SERIE),
  CONSTRAINT Fk_EPISODE_REALISEE_PAR_PERS FOREIGN KEY(TITRE_SERIE) REFERENCES SERIE(TITRE_SERIE),
  CONSTRAINT Fk_SERIE_REALISEE_PERS FOREIGN KEY(NOM_PERS,PRENOM_PERS) REFERENCES PERSONNAGE(NOM_PERS,PRENOM_PERS)
);

CREATE TABLE EPISODE_REALISEE_PAR(
  NOM_PERS VARCHAR2(12),
  PRENOM_PERS VARCHAR2(12),
  TITRE_EPISODE VARCHAR2(50),
  CONSTRAINT Pk_EPISODE_REALISEE_PAR PRIMARY KEY(NOM_PERS,PRENOM_PERS,TITRE_EPISODE),
  CONSTRAINT Fk_EPISODE_REALISEE_TITRE FOREIGN KEY(TITRE_EPISODE) REFERENCES EPISODES(TITRE_EPISODE),
  CONSTRAINT Fk_EPISODE_REALISEE_PERS FOREIGN KEY(NOM_PERS,PRENOM_PERS) REFERENCES PERSONNAGE(NOM_PERS,PRENOM_PERS)
);

CREATE TABLE UTILISATEURS(
  PSEUDO VARCHAR2(20),
  DATE_INSCRIPTION DATE,
  AGE NUMBER(3),
  SEXE CHAR(1),
  CONSTRAINT Pk_UTILISATEURS PRIMARY KEY(PSEUDO),
  CONSTRAINT Ck_UTILISATEURS_DATE_INSC CHECK(EXTRACT(YEAR FROM DATE_INSCRIPTION)>=2008),
  CONSTRAINT Ck_UTILISATEURS_AGE CHECK(AGE>=18),
  CONSTRAINT Ck_UTILISATEURS_SEXE CHECK(SEXE IN('F','M'))
);

CREATE TABLE AVIS_SERIE(
  PSEUDO VARCHAR2(20),
  TITRE_SERIE VARCHAR2(50),
  NOTE DECIMAL(2,1),
  DATE_AVIS DATE,
  COMMENTAIRE VARCHAR2(300),
  CONSTRAINT Pk_AVIS_SERIE PRIMARY KEY(PSEUDO,TITRE_SERIE),
  CONSTRAINT Fk_AVIS_SERIE_PSEUDO FOREIGN KEY(PSEUDO) REFERENCES UTILISATEURS(PSEUDO),
  CONSTRAINT Fk_AVIS_SERIE_TITRE_SERIE FOREIGN KEY(TITRE_SERIE) REFERENCES SERIE(TITRE_SERIE),
  CONSTRAINT Ck_AVIS_SERIE_NOTE CHECK(NOTE BETWEEN 0 AND 10),
  CONSTRAINT Ck_AVIS_SERIE_DATE_AVIS CHECK(EXTRACT(YEAR FROM DATE_AVIS)>2008)
);

CREATE TABLE AVIS_EPISODE(
  PSEUDO VARCHAR2(20),
  TITRE_EPISODE VARCHAR2(50),
  NOTE DECIMAL(2,1),
  DATE_AVIS DATE,
  COMMENTAIRE VARCHAR2(300),
  CONSTRAINT Pk_AVIS_EPISODE PRIMARY KEY(PSEUDO,TITRE_EPISODE),
  CONSTRAINT Fk_AVIS_EPISODE_PSEUDO FOREIGN KEY(PSEUDO) REFERENCES UTILISATEURS(PSEUDO),
  CONSTRAINT Fk_AVIS_EPISODE_TITRE_EPISODE FOREIGN KEY(TITRE_EPISODE) REFERENCES EPISODES(TITRE_EPISODE),
  CONSTRAINT Ck_AVIS_EPISODE_NOTE CHECK(NOTE BETWEEN 0 AND 10),
  CONSTRAINT Ck_AVIS_EPISODE_DATE_AVIS CHECK(EXTRACT(YEAR FROM DATE_AVIS)>2008)
);

CREATE TABLE FORUM(
  NUM_F NUMBER(4),
  PSEUDO1 VARCHAR2(20),
  PSEUDO2 VARCHAR2(20),
  TITRE_SERIE VARCHAR2(50),
  MESSAGE VARCHAR2(250),
  DATE_ENVOIE DATE,
  TYPE_MESSAGE CHAR(4),
  CONSTRAINT Pk_FORUM PRIMARY KEY(NUM_F),
  CONSTRAINT Fg_FORUM_PSEUDO1 FOREIGN KEY(PSEUDO1) REFERENCES UTILISATEURS(PSEUDO),
  CONSTRAINT Fg_FORUM_PSEUDO2 FOREIGN KEY(PSEUDO2) REFERENCES UTILISATEURS(PSEUDO),
  CONSTRAINT Ck_FORUM_PSEUDO CHECK(PSEUDO2 != PSEUDO1),
  CONSTRAINT Fg_FORUM_TITRE_SERIE FOREIGN KEY(TITRE_SERIE) REFERENCES SERIE(TITRE_SERIE),
  CONSTRAINT Ck_FORUM_TYPE_MESSAGE CHECK(TYPE_MESSAGE IN('Re','Init')),
  CONSTRAINT Ck_FORUM_MESSAGE CHECK(MESSAGE IS NOT NULL)
);

SET PAGESIZE 9999;
SET LINESIZE 9999;
